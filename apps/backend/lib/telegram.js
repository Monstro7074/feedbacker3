// apps/backend/lib/telegram.js
import TelegramBot from 'node-telegram-bot-api';
import { supabaseAdmin } from './supabase.js';

const TOKEN = process.env.TELEGRAM_TOKEN || process.env.TELEGRAM_BOT_TOKEN;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const BUCKET = process.env.SUPABASE_BUCKET;

function getBot() {
  if (!TOKEN || !CHAT_ID) {
    console.warn('‚ö†Ô∏è TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã ‚Äî –∞–ª–µ—Ä—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã');
    return null;
  }
  return new TelegramBot(TOKEN, { polling: false });
}

export async function sendAlert(feedback) {
  const bot = getBot();
  if (!bot) return;

  try {
    // –Ω–∞—Ö–æ–¥–∏–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ –±–∞–∫–µ—Ç–µ
    let audioPath = feedback.audio_path;
    if (!audioPath && feedback.audio_url) {
      audioPath = feedback.audio_url.replace(/^https?:\/\/[^/]+\/storage\/v1\/object\/public\/[^/]+\//, '');
    }

    let audioUrl = '–ù–µ—Ç —Å—Å—ã–ª–∫–∏';
    if (audioPath) {
      const { data: s, error: se } = await supabaseAdmin
        .storage.from(BUCKET)
        .createSignedUrl(audioPath, 60);
      if (!se && s?.signedUrl) audioUrl = s.signedUrl;
    }

    // –∫–æ—Ä–æ—Ç–∫–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ (–Ω–µ –±–æ–ª–µ–µ 4 —Å—Ç—Ä–æ–∫)
    let transcriptText = '';
    if (feedback.transcript) {
      const lines = String(feedback.transcript).split('\n');
      transcriptText = `\nüó£ *–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:*\n` +
        (lines.length > 4 ? `${lines.slice(0, 4).join('\n')}‚Ä¶` : lines.join('\n'));
    }

    const base = process.env.FEEDBACK_API_URL || 'https://example.com';
    const fullTranscriptUrl = `${base}/feedback/full/${feedback.id}`;

    const msg =
`üö® *–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–∑—ã–≤!*
*–ú–∞–≥–∞–∑–∏–Ω:* ${feedback.shop_id}
*–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:* ${feedback.device_id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
*–ê–Ω–æ–Ω–∏–º–Ω–æ:* ${feedback.is_anonymous ? '–î–∞' : '–ù–µ—Ç'}
*–û—Ü–µ–Ω–∫–∞ —ç–º–æ—Ü–∏–π:* ${feedback.emotion_score}
*–¢–µ–≥–∏:* ${feedback.tags?.join(', ') || '–Ω–µ—Ç'}
*–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:* ${feedback.summary || '–Ω–µ—Ç'}${transcriptText}

üéß [–°–ª—É—à–∞—Ç—å –∞—É–¥–∏–æ](${audioUrl})`;

    await bot.sendMessage(CHAT_ID, msg, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [[{ text: 'üìÑ –ü–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞', url: fullTranscriptUrl }]]
      }
    });

    console.log('‚úÖ Telegram alert –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram alert:', err.message);
  }
}
